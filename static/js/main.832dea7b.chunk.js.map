{"version":3,"sources":["components/Characteritems.js","img/spinner.gif","components/Charactergrid.js","img/logo.png","components/ui/Header.js","App.js","reportWebVitals.js","index.js"],"names":["Characteritems","item","className","src","img","alt","name","portrayed","nickname","birthday","status","Charactergrid","items","isloading","spin","map","char_id","Header","logo","App","useState","setItems","setIsloading","useEffect","a","axios","response","console","log","data","fetchItems","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQAwCeA,MAtCf,YAAsC,IAAXC,EAAU,EAAVA,KACvB,OACI,qBAAKC,UAAU,OAAf,SACI,sBAAKA,UAAU,aAAf,UACI,qBAAKA,UAAU,aAAf,SACI,qBAAKC,IAAKF,EAAKG,IAAKC,IAAI,OAI5B,sBAAKH,UAAU,YAAf,UACZ,6BAAKD,EAAKK,OACV,+BACI,+BACI,iDAA6BL,EAAKM,aAGtC,+BACI,+CAA2BN,EAAKO,YAGpC,+BACI,+CAA2BP,EAAKQ,YAGpC,+BACI,6CAAyBR,EAAKS,sBC3B3B,MAA0B,oCCa1BC,MAVf,YAA6C,IAArBC,EAAoB,EAApBA,MACpB,OADwC,EAAbC,UACT,qBAAKX,UAAU,UAAUC,IAAKW,EAAMT,IAAI,KAAQ,yBAASH,UAAU,QAAnB,SAC5DU,EAAMG,KAAI,SAAAd,GAAI,OAChB,cAAC,EAAD,CAAmCA,KAAMA,EAAzC,SAAiDA,EAAKK,MAAjCL,EAAKe,eCNnB,MAA0B,iCCW1BC,MARf,WACI,OACI,qBAAKf,UAAU,SAAf,SACI,qBAAKC,IAAKe,EAAMb,IAAI,QC2BjBc,EAxBF,WAAM,IAAD,EAESC,mBAAS,IAFlB,mBAETR,EAFS,KAEHS,EAFG,OAGmBD,oBAAS,GAH5B,mBAGTP,EAHS,KAGGS,EAHH,KAgBhB,OAXAC,qBAAW,YACO,uCAAG,4BAAAC,EAAA,sEACMC,IAAM,iDADZ,OACXC,EADW,OAEjBC,QAAQC,IAAIF,EAASG,MACrBR,EAASK,EAASG,MAClBP,GAAa,GAJI,2CAAH,qDAOhBQ,KACA,IAGA,sBAAK5B,UAAU,YAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAeW,UAAWA,EAAWD,MAAOA,QChBnCmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.832dea7b.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Characteritems({  item  } ) {\r\n    return (\r\n        <div className='card' >\r\n            <div className='card-inner'>\r\n                <div className='card-front' >\r\n                    <img src={item.img} alt='' />\r\n\r\n                </div>\r\n\r\n                <div className='card-back' >\r\n    <h1>{item.name}</h1>\r\n    <ul>\r\n        <li>\r\n            <strong>Actor Name:</strong>{item.portrayed}\r\n\r\n        </li>\r\n        <li>\r\n            <strong>Nickname:</strong>{item.nickname}\r\n            \r\n        </li>\r\n        <li>\r\n            <strong>Birthday:</strong>{item.birthday}\r\n            \r\n        </li>\r\n        <li>\r\n            <strong>status:</strong>{item.status}\r\n            \r\n        </li>\r\n    </ul>\r\n\r\n                </div>\r\n\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Characteritems\r\n","export default __webpack_public_path__ + \"static/media/spinner.11d9cde8.gif\";","import React from 'react'\r\nimport Characteritems from './Characteritems'\r\nimport spin from '../../src/img/spinner.gif'\r\nfunction Charactergrid({items ,isloading }) {\r\n    return isloading?(<img className='spinner' src={spin} alt='' />):(<section className='cards' >\r\n        { items.map(item => (\r\n        <Characteritems key={item.char_id} item={item} >{item.name}</Characteritems>\r\n        ))}\r\n    </section>\r\n       \r\n    )\r\n}\r\n\r\nexport default Charactergrid\r\n","export default __webpack_public_path__ + \"static/media/logo.e6ecab44.png\";","import React from 'react'\r\nimport logo from '../../img/logo.png'\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className='center' >\r\n            <img src={logo} alt=''  />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport Charactergrid from './components/Charactergrid';\nimport Header from './components/ui/Header';\n\n\n\nconst  App = ()=> {\n\n  const [items,setItems] = useState([]);\n  const [isloading , setIsloading] = useState(true)\n\n  useEffect (()=>{\n    const fetchItems = async ()=> {\n      const response = await axios('https://www.breakingbadapi.com/api/characters');\n      console.log(response.data)\n      setItems(response.data)\n      setIsloading(false);\n    }\n\n    fetchItems();\n  },[]);\n\n  return (\n    <div className=\"container\">\n      <Header/>\n      <Charactergrid isloading={isloading} items={items}  />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}